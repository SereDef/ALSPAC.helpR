% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/alspac_clean.R
\name{rm_siblings}
\alias{rm_siblings}
\title{Remove siblings from the sample.}
\usage{
rm_siblings(
  idc = "idc",
  method = "random",
  column_selection = "all",
  seed = 310896,
  mom.id = "cidb1234",
  parity = "qlet",
  data = NULL
)
}
\arguments{
\item{idc}{: ('idc') the name of the IDC variable constructed using \code{make_idc()}.}

\item{method}{: ('random') controls how to perform the exclusion. If this is
set to \code{"random"} (default option) one sibling is randomly selected for each pair.
If \code{"parity"} is chosen, the oldest sibling is retained in the dataset. When
method is set to \code{"missing"}, the sibling with the lowest number of missing
values is retained. Missing rates are computed over the entire \code{data} dataset
or only over the columns specified in \code{column_selection}.}

\item{column_selection}{: ('all') specify which columns to use to compute missing
data rates (only used when method = "missing").}

\item{seed}{: specity a seed for random selection (only used when method = "random")}

\item{mom.id}{: The variable name of the (project specific) mother ID.}

\item{parity}{: (qlet) a two-level variable indicating parity (A or B).}

\item{data}{: (NULL) allows to specify the name of the dataset if this is
different than "data".}
}
\value{
A dataframe where only one sibling is left for each pair.
}
\description{
The function requires either a unique child identifier constructed using
\code{make_idc()} or the mother ID and parity variable (used to call \code{make_idc()}
internally). The \code{method} parameter allows to control how the exclusion is done
and takes values: "random", "parity" and "missing" (see parameter description
for more details).
}
\examples{
data <- ALSPAC.helpR::alspac_toy_data
data_nosibl <- rm_siblings(idc='IDC') # Assumes a dataset called "data"
\dontrun{
data_nosibl <- rm_siblings(idc='new_ID', data=toy_data)
data_nosibl <- rm_siblings(method='missing', column_selection=c('poteto','potato'))
}

}
